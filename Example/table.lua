--[[
    表是一切复杂数据的基础：数组、二维数组、字典、类等
    数组和二维数组 --- 表：
                        索引是从1开始
                        中间为nil会断掉长度获取不准确（高版本的lua将这个给修复了，最后的nil会被剔除，但是中间的不会被剔除了）
                        长度的获取-#
                        自定义索引 ： 在计算长度时，忽略小于等于0的索引
]]

-- 数组跟c#中的是差不多的，也可以进行修改
a = {1,2,3,4,5,true,"123"}
print(a[1])
print(#a)
a[1] = 3
print(a[1])
-- 数组的简单遍历
for i = 1, #a, 1 do
    print(a[i])
end

-- 二维数组
aa = {{1,2,3},{4,5,6}}
print(aa[1][1])
-- 这里二维数组的长度也跟c#中的一致，返回的是表中有几张表
print(#aa)

print("---------------------------------------")
-- 二维数组的遍历，这里如果不声明b的话，那么b应该就是一个全局变量,print(b)加上了local之后打印出来的为nil
for i = 1, #aa, 1 do
    b = aa[i]
    for j = 1, #b, 1 do
        print(b[j])
    end
end

print("=======================================")
-- 自定义索引,这里自定义的索引小于等于0的话，它是默认将它剔除到长度的，一般不常用自定义索引
b = {[-1] = -1,[0] = 0,1,2,3,4}
print(#b)


d = {1,2,3,nil,4,5,nil}
print(#d)

e = {[0] = 1,2,[-1] = 3,4,[3] = 6} -- 而且这里用#号来进行遍历的话只能遍历连续的大于0的索引的值
print(#e)

for i,k in ipairs(e) do
    print("键为",i,"_",k);
end

c = {[1] = 1,[2] = 2,[5] = 3,[6] = 6} -- 这里索引跳了超过两个以上就会把最大的那个剔除了
print(#c)